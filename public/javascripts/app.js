// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.AppViewModel = (function() {

    function AppViewModel() {
      var Videos;
      _.bindAll(this, 'afterBinding');
      window.app = this;
      Videos = Backbone.Collection.extend({
        url: "http://gdata.youtube.com/feeds/api/users/patricktangolf/uploads?v=2&alt=jsonc",
        parse: function(response) {
          return response.data.items;
        }
      });
      this.videos = new Videos();
      this.videos.fetch({
        success: function(collection, response) {
          return console.log(response);
        }
      });
      this.active_url = ko.observable(window.location.hash);
      return;
    }

    AppViewModel.prototype.afterBinding = function(vm, el) {
      var _this = this;
      this.router = this.createRouter(el);
      Backbone.history.bind('route', function() {
        return _this.active_url(window.location.hash);
      });
      return Backbone.history.start({
        hashChange: true
      });
    };

    AppViewModel.prototype.loadPage = function(el) {
      if (this.active_el) {
        ko.removeNode(this.active_el);
      }
      $('.page').append(this.active_el = el);
      return $(el).addClass('active');
    };

    AppViewModel.prototype.createRouter = function() {
      var router,
        _this = this;
      router = new Backbone.Router();
      this.active_el = null;
      router.route('', null, function() {
        return _this.loadPage(kb.renderTemplate('home', {}));
      });
      router.route('news', null, function() {
        return _this.loadPage(kb.renderTemplate('news', {}));
      });
      router.route('video', null, function() {
        return _this.loadPage(kb.renderTemplate('video', new VideosViewModel(_this.videos)));
      });
      router.route('photo', null, function() {
        return _this.loadPage(kb.renderTemplate('photo', {}));
      });
      router.route('contact', null, function() {
        return _this.loadPage(kb.renderTemplate('contact', {}));
      });
      return router;
    };

    return AppViewModel;

  })();

  window.VideoViewModel = (function(_super) {

    __extends(VideoViewModel, _super);

    function VideoViewModel(model, options) {
      VideoViewModel.__super__.constructor.call(this, model, {
        options: options,
        keys: ['description', 'title', 'thumbnail']
      });
    }

    return VideoViewModel;

  })(kb.ViewModel);

  window.VideosViewModel = function(videos) {
    console.log(videos);
    this.videos = kb.collectionObservable(videos, {
      view_model: VideoViewModel
    });
  };

}).call(this);
